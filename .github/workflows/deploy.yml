name: Deploy to Cloudflare Pages

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      redeploy_count:
        description: 'Number of previous commits to redeploy (0 to skip)'
        required: false
        default: '0'

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build (OpenNext)
        run: |
          npx opennextjs-cloudflare build 2>&1 | tee open-next-build.log
        # If the build fails, upload logs for easy inspection
      - name: Upload build logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: open-next-build-log
          path: open-next-build.log

      - name: Verify build output
        run: |
          echo "Build completed successfully"
          ls -la .open-next/ || echo "Build output directory not found"

      - name: Deploy to Cloudflare Pages
        run: |
          # Use only the first line of commit message to avoid shell escaping issues
          COMMIT_MSG=$(echo "${{ github.event.head_commit.message }}" | head -n 1)
          npx wrangler pages deploy .open-next/ \
            --project-name="${{ secrets.CLOUDFLARE_PROJECT_NAME }}" \
            --branch="${{ github.ref_name }}" \
            --commit-hash="${{ github.sha }}" \
            --commit-message="$COMMIT_MSG"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN || secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Redeploy previous commits (optional)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.redeploy_count != '0' }}
        run: |
          set -euo pipefail
          redeploy_count="${{ github.event.inputs.redeploy_count }}"
          echo "Redeploying last $redeploy_count commits"
          # Ensure full history is available
          git fetch --prune --unshallow || true
          commits=$(git rev-list --max-count=$redeploy_count HEAD)
          for sha in $commits; do
            echo "Deploying commit $sha"
            npx wrangler pages deploy .open-next/ \
              --project-name="${{ secrets.CLOUDFLARE_PROJECT_NAME }}" \
              --branch="${{ github.ref_name }}" \
              --commit-hash="$sha" \
              --commit-message="Re-deploy of $sha"
          done
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN || secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
